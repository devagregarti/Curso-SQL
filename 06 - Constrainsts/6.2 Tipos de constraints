âœ… Tipos de Constraints no PostgreSQL
1. NOT NULL
Impede que a coluna receba valores nulos. Muito usada para campos obrigatÃ³rios.

sql
Copy
Edit
nome TEXT NOT NULL
ðŸ”¸ Exemplo: Um cliente sempre deve ter um nome.

2. UNIQUE
Garante que os valores de uma coluna (ou combinaÃ§Ã£o de colunas) nÃ£o se repitam.

sql
Copy
Edit
email TEXT UNIQUE
ðŸ”¸ Exemplo: Dois clientes nÃ£o podem ter o mesmo e-mail.

3. PRIMARY KEY
Combina NOT NULL e UNIQUE. Cada tabela deve ter uma Ãºnica chave primÃ¡ria, que identifica de forma Ãºnica cada linha.

sql
Copy
Edit
id SERIAL PRIMARY KEY
ðŸ”¸ Exemplo: Identificar cada cliente de forma Ãºnica com o campo id.

4. FOREIGN KEY
Garante que o valor de uma coluna exista como chave primÃ¡ria em outra tabela. Serve para relacionar tabelas.

sql
Copy
Edit
cliente_id INT REFERENCES clientes(id)
ðŸ”¸ Exemplo: Um pedido precisa estar ligado a um cliente que jÃ¡ exista.

5. CHECK
Permite definir regras personalizadas com expressÃµes lÃ³gicas.

sql
Copy
Edit
idade INT CHECK (idade >= 18)
ðŸ”¸ Exemplo: Garantir que apenas clientes maiores de idade sejam cadastrados.

6. DEFAULT
Define um valor padrÃ£o se nada for informado na inserÃ§Ã£o.

sql
Copy
Edit
ativo BOOLEAN DEFAULT true
ðŸ”¸ Exemplo: Todo cliente Ã© cadastrado como ativo, a menos que se diga o contrÃ¡rio.

7. EXCLUDE (menos comum, mas poderoso)
Garante exclusividade de composiÃ§Ã£o de colunas, Ãºtil com tipos como ranges e arrays.

sql
Copy
Edit
EXCLUDE USING gist (period WITH &&)
ðŸ”¸ Exemplo: Evitar sobreposiÃ§Ã£o de horÃ¡rios ou perÃ­odos.

ðŸ§ª Exemplo completo:
sql
Copy
Edit
CREATE TABLE pedidos (
    id SERIAL PRIMARY KEY,
    cliente_id INT REFERENCES clientes(id),
    valor NUMERIC NOT NULL CHECK (valor > 0),
    data_pedido DATE DEFAULT CURRENT_DATE,
    status TEXT DEFAULT 'pendente',
    UNIQUE (cliente_id, data_pedido)
);
ðŸ§  Dica de ouro:
VocÃª pode dar nomes Ã s constraints, o que ajuda na manutenÃ§Ã£o:

sql
Copy
Edit
email TEXT CONSTRAINT email_unico UNIQUE
