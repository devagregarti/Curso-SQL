| Evento            | Exemplo de uso                             |
| ----------------- | ------------------------------------------ |
| **BEFORE INSERT** | Validar ou alterar dados antes da inser√ß√£o |
| **AFTER INSERT**  | Gravar log, atualizar outra tabela         |
| **BEFORE UPDATE** | Validar ou impedir mudan√ßa                 |
| **AFTER UPDATE**  | Atualizar logs, recalcular algo            |
| **BEFORE DELETE** | Impedir exclus√£o de registros cr√≠ticos     |
| **AFTER DELETE**  | Registrar remo√ß√£o em log                   |



üéØ Triggers por Evento em SQL
‚úÖ O que s√£o?
Triggers por evento s√£o gatilhos que s√£o ativados quando um determinado tipo de evento acontece em uma tabela.

Os tr√™s principais eventos:
INSERT ‚Üí Quando um novo registro √© adicionado

UPDATE ‚Üí Quando um registro existente √© modificado

DELETE ‚Üí Quando um registro √© removido

üì¶ Exemplo pr√°tico: tabela clientes
Vamos criar triggers para registrar a√ß√µes diferentes conforme o tipo de evento.

Tabela de log:
sql
Copiar
Editar
CREATE TABLE log_eventos_clientes (
  cliente_id INT,
  tipo_evento TEXT,
  data_evento TIMESTAMP
);
üîß Fun√ß√£o gen√©rica para todos os eventos:
sql
Copiar
Editar
CREATE OR REPLACE FUNCTION registrar_evento()
RETURNS TRIGGER AS $$
BEGIN
  INSERT INTO log_eventos_clientes(cliente_id, tipo_evento, data_evento)
  VALUES (
    CASE
      WHEN TG_OP = 'DELETE' THEN OLD.id
      ELSE NEW.id
    END,
    TG_OP,
    now()
  );
  RETURN NULL;
END;
$$ LANGUAGE plpgsql;
üîç TG_OP √© uma vari√°vel especial que retorna o tipo do evento (INSERT, UPDATE ou DELETE)

‚öôÔ∏è Criando triggers separadas para cada evento:
sql
Copiar
Editar
-- Trigger para INSERT
CREATE TRIGGER trigger_insert_cliente
AFTER INSERT ON clientes
FOR EACH ROW
EXECUTE FUNCTION registrar_evento();

-- Trigger para UPDATE
CREATE TRIGGER trigger_update_cliente
AFTER UPDATE ON clientes
FOR EACH ROW
EXECUTE FUNCTION registrar_evento();

-- Trigger para DELETE
CREATE TRIGGER trigger_delete_cliente
AFTER DELETE ON clientes
FOR EACH ROW
EXECUTE FUNCTION registrar_evento();
üìå Resultado
Sempre que um cliente for inserido, atualizado ou exclu√≠do, ser√° gerado um registro na log_eventos_clientes, indicando:

O ID do cliente

O tipo de evento (INSERT, UPDATE, DELETE)

A data e hora

‚ö†Ô∏è Pontos de aten√ß√£o
Voc√™ pode criar uma trigger para cada evento, ou at√© triggers diferentes com comportamentos espec√≠ficos.

A mesma fun√ß√£o pode ser reutilizada se for gen√©rica (como no exemplo).

Cuidado com l√≥gicas complexas ou redundantes, principalmente se mais de uma trigger for ativada ao mesmo tempo.

üß† Dica
Triggers por evento s√£o ideais para:

Auditoria

Hist√≥rico de a√ß√µes

Manuten√ß√£o de integridade entre tabelas
