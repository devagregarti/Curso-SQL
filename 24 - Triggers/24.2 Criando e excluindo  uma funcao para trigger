‚úÖ Passo 1: Criando uma fun√ß√£o que ser√° executada
Antes de criar a trigger, precisamos de uma fun√ß√£o que diz o que a trigger deve fazer.

üîπ Exemplo pr√°tico:
Queremos registrar toda vez que um cliente for deletado da tabela clientes:

sql
Copiar
Editar
CREATE TABLE log_exclusao (
  cliente_id INT,
  data_exclusao TIMESTAMP
);
Criamos a fun√ß√£o que ser√° executada pela trigger:

sql
Copiar
Editar
CREATE OR REPLACE FUNCTION registrar_exclusao()
RETURNS TRIGGER AS $$
BEGIN
  INSERT INTO log_exclusao(cliente_id, data_exclusao)
  VALUES (OLD.id, now());
  RETURN OLD;
END;
$$ LANGUAGE plpgsql;
‚úÖ Passo 2: Criando a trigger
Agora associamos essa fun√ß√£o a uma trigger na tabela clientes:

sql
Copiar
Editar
CREATE TRIGGER gatilho_exclusao_cliente
AFTER DELETE ON clientes
FOR EACH ROW
EXECUTE FUNCTION registrar_exclusao();
‚úÖ Agora, sempre que algu√©m for deletado da tabela clientes, o banco registra o id e a hora no log_exclusao.

üóëÔ∏è Excluindo uma trigger
Se voc√™ quiser remover a trigger:

sql
Copiar
Editar
DROP TRIGGER gatilho_exclusao_cliente ON clientes;
‚ùó Isso s√≥ remove a trigger, n√£o apaga a fun√ß√£o registrar_exclusao.

Se quiser apagar tamb√©m a fun√ß√£o:

sql
Copiar
Editar
DROP FUNCTION registrar_exclusao();
‚ö†Ô∏è Pontos de aten√ß√£o
Triggers s√£o associadas a uma tabela espec√≠fica.

Voc√™ precisa criar a fun√ß√£o primeiro, depois a trigger.

Sempre pense se a l√≥gica n√£o poderia ser feita na aplica√ß√£o. Triggers autom√°ticas podem ser dif√≠ceis de rastrear em projetos maiores.

üß† Dica final
Use triggers para automatizar tarefas do banco que devem acontecer independente da aplica√ß√£o, como auditoria e controle de integridade.

