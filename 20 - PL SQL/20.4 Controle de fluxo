üîÅ Controle de Fluxo no PL/pgSQL
‚úÖ O que √© "controle de fluxo"?
Controle de fluxo √© a forma de tomar decis√µes ou repetir a√ß√µes dentro de um programa.

√â o que permite ao c√≥digo escolher caminhos diferentes dependendo de uma condi√ß√£o (como "se isso for verdade, fa√ßa aquilo").

Tamb√©m permite repetir tarefas com la√ßos de repeti√ß√£o, como contar ou verificar listas.

üß© Tipos de controle de fluxo no PL/pgSQL
IF / ELSIF / ELSE

CASE

LOOP / WHILE / FOR

1Ô∏è‚É£ IF / ELSIF / ELSE ‚Äì Usado para decis√µes simples
sql
Copy
Edit
IF idade >= 18 THEN
  RAISE NOTICE 'Maior de idade';
ELSIF idade >= 13 THEN
  RAISE NOTICE 'Adolescente';
ELSE
  RAISE NOTICE 'Crian√ßa';
END IF;
IF: testa uma condi√ß√£o.

THEN: o que fazer se a condi√ß√£o for verdadeira.

ELSIF: outra condi√ß√£o opcional (pode ter v√°rias).

ELSE: o que fazer se nenhuma condi√ß√£o for verdadeira.

END IF: final do bloco.

2Ô∏è‚É£ CASE ‚Äì Quando h√° muitas op√ß√µes
sql
Copy
Edit
CASE nivel
  WHEN 1 THEN RAISE NOTICE 'Iniciante';
  WHEN 2 THEN RAISE NOTICE 'Intermedi√°rio';
  WHEN 3 THEN RAISE NOTICE 'Avan√ßado';
  ELSE RAISE NOTICE 'N√≠vel desconhecido';
END CASE;
Usado para v√°rias compara√ß√µes com o mesmo valor.

Mais organizado do que v√°rios IFs seguidos.

3Ô∏è‚É£ LOOPs ‚Äì Para repetir a√ß√µes
üîÅ LOOP simples (infinito, precisa de EXIT)
sql
Copy
Edit
LOOP
  RAISE NOTICE 'Executando...';
  EXIT; -- sai do loop imediatamente
END LOOP;
üîÑ WHILE ‚Äì Repete enquanto a condi√ß√£o for verdadeira
sql
Copy
Edit
WHILE contador <= 5 LOOP
  RAISE NOTICE 'Contador: %', contador;
  contador := contador + 1;
END LOOP;
üî¢ FOR ‚Äì Para repetir um n√∫mero fixo de vezes
sql
Copy
Edit
FOR i IN 1..3 LOOP
  RAISE NOTICE 'N√∫mero: %', i;
END LOOP;
‚ö†Ô∏è Cuidados e boas pr√°ticas
Sempre use EXIT ou uma condi√ß√£o clara para parar o LOOP, sen√£o ele roda para sempre.

Use nomes de vari√°veis claros, como contador, indice, valor_total.

Evite l√≥gica muito complexa em um √∫nico bloco. Divida se necess√°rio.

Testar bem as condi√ß√µes evita comportamentos inesperados (ex: loops infinitos).

üß† Exemplo pr√°tico completo
sql
Copy
Edit
CREATE OR REPLACE FUNCTION verificar_idade(idade INTEGER)
RETURNS TEXT AS $$
DECLARE
  resultado TEXT;
BEGIN
  IF idade >= 18 THEN
    resultado := 'Maior de idade';
  ELSE
    resultado := 'Menor de idade';
  END IF;

  RETURN resultado;
END;
$$ LANGUAGE plpgsql;
sql
Copy
Edit
-- Como usar:
SELECT verificar_idade(20); -- Resultado: 'Maior de idade'
‚úÖ Resumo da aula
Controle de fluxo permite tomar decis√µes e repetir a√ß√µes no c√≥digo.

Use IF, CASE, LOOP, WHILE e FOR para controlar o que acontece e quando.

Muito √∫til para deixar o c√≥digo inteligente e automatizado.

Boas pr√°ticas evitam erros e deixam o c√≥digo mais f√°cil de entender.