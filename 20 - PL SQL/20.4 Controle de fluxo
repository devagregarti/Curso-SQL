üéØ T√≥pico: Controle de Fluxo em PL/SQL
1. O que √© controle de fluxo?
S√£o comandos que definem como o c√≥digo ser√° executado dependendo de condi√ß√µes ou repeti√ß√µes.

Muito usado para decis√µes, loops e tratamento de exce√ß√µes.

2. Principais comandos de controle de fluxo em PL/SQL:
Comando	Para que serve
IF ... THEN	Executar c√≥digo se uma condi√ß√£o for verdadeira
IF ... ELSE	Escolher entre dois caminhos
ELSIF	V√°rias condi√ß√µes sequenciais
CASE	Substitui v√°rios IF para comparar valores
LOOP	Repetir c√≥digo indefinidamente
WHILE	Repetir enquanto condi√ß√£o for verdadeira
FOR	Repetir n√∫mero definido de vezes

3. Exemplo pr√°tico: decis√£o com IF
plsql
Copy
Edit
DECLARE
  v_idade NUMBER := 20;
BEGIN
  IF v_idade >= 18 THEN
    DBMS_OUTPUT.PUT_LINE('Maior de idade');
  ELSE
    DBMS_OUTPUT.PUT_LINE('Menor de idade');
  END IF;
END;
4. Exemplo pr√°tico: uso de CASE para categorias
plsql
Copy
Edit
DECLARE
  v_nota NUMBER := 75;
  v_conceito VARCHAR2(10);
BEGIN
  CASE 
    WHEN v_nota >= 90 THEN v_conceito := 'Excelente';
    WHEN v_nota >= 70 THEN v_conceito := 'Bom';
    WHEN v_nota >= 50 THEN v_conceito := 'Regular';
    ELSE v_conceito := 'Insuficiente';
  END CASE;
  DBMS_OUTPUT.PUT_LINE('Conceito: ' || v_conceito);
END;
5. Exemplo pr√°tico: loop FOR para contar de 1 a 5
plsql
Copy
Edit
BEGIN
  FOR i IN 1..5 LOOP
    DBMS_OUTPUT.PUT_LINE('N√∫mero: ' || i);
  END LOOP;
END;
6. Dicas r√°pidas:
Use IF para decis√µes simples.

CASE deixa o c√≥digo mais limpo para v√°rias condi√ß√µes.

LOOP e FOR ajudam a repetir tarefas sem copiar c√≥digo.

Controle de fluxo √© essencial para automatizar processos.

Resumo para v√≠deo:
Defina controle de fluxo e sua import√¢ncia.

Mostre IF/ELSE e CASE com exemplos simples.

Explique brevemente loops FOR.

D√™ um exemplo pr√°tico para fixar o conceito.

