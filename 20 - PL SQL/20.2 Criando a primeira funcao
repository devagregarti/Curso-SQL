üõ†Ô∏è Criando o primeiro PL/pgSQL (PostgreSQL)
‚úÖ O que vamos aprender nesta aula
O que √© uma fun√ß√£o no PostgreSQL.

Como escrever o primeiro c√≥digo PL/pgSQL.

Criar um exemplo simples e √∫til, f√°cil de entender mesmo sem experi√™ncia em programa√ß√£o.

üìå O que √© uma fun√ß√£o no banco de dados?
Uma fun√ß√£o √© um bloco de c√≥digo que executa uma tarefa espec√≠fica.

√â como uma receita de bolo: voc√™ d√° os ingredientes (dados) e ela entrega o resultado (resposta).

No PostgreSQL, fun√ß√µes podem ser escritas em PL/pgSQL, a linguagem procedural do sistema.

üß™ Nosso primeiro exemplo ‚Äì fun√ß√£o que soma dois n√∫meros
sql
Copy
Edit
CREATE OR REPLACE FUNCTION somar(a INTEGER, b INTEGER)
RETURNS INTEGER AS $$
BEGIN
  RETURN a + b;
END;
$$ LANGUAGE plpgsql;
üßæ Explicando o c√≥digo, passo a passo
CREATE OR REPLACE FUNCTION: cria a fun√ß√£o (ou substitui, se ela j√° existir).

somar: √© o nome da fun√ß√£o.

(a INTEGER, b INTEGER): s√£o os dois n√∫meros que a fun√ß√£o vai receber.

RETURNS INTEGER: o resultado da fun√ß√£o ser√° um n√∫mero inteiro.

BEGIN ... END;: √© o bloco principal onde a l√≥gica acontece.

RETURN a + b;: devolve a soma dos dois n√∫meros.

LANGUAGE plpgsql: indica que usamos a linguagem PL/pgSQL.

‚ñ∂Ô∏è Como usar a fun√ß√£o depois de criada
sql
Copy
Edit
SELECT somar(3, 5);
-- Resultado: 8
üß† Por que isso √© √∫til?
Mesmo um exemplo simples como esse j√° mostra o potencial do PL/pgSQL.

Podemos criar fun√ß√µes para automatizar tarefas, calcular valores, verificar condi√ß√µes, etc.

Isso facilita muito a vida de quem trabalha com dados, mesmo sem ser programador.

üí° Dica pr√°tica
Voc√™ pode adaptar esse exemplo para tarefas do dia a dia, como:

Calcular desconto em uma compra.

Verificar se um n√∫mero est√° acima de um limite.

Converter temperatura de Celsius para Fahrenheit.

‚úÖ Resumo da aula
Criamos nossa primeira fun√ß√£o usando PL/pgSQL no PostgreSQL.

Entendemos o que cada parte do c√≥digo faz.

Vimos como fun√ß√µes podem simplificar e automatizar tarefas com dados.

