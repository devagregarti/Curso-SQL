üéØ T√≥pico: Introdu√ß√£o ao PL/SQL
1. O que √© PL/SQL?
PL/SQL √© uma extens√£o procedural da linguagem SQL, usada principalmente no Oracle, que permite escrever blocos de c√≥digo com l√≥gica, controle de fluxo, vari√°veis, e tratamento de erros.

√â usado para criar scripts, procedimentos, fun√ß√µes e triggers, tornando o SQL mais poderoso e flex√≠vel.

2. Por que usar PL/SQL no dia a dia?
Para automatizar tarefas repetitivas.

Fazer processos complexos que o SQL puro n√£o consegue, como loops e condi√ß√µes.

Melhorar performance agrupando v√°rias opera√ß√µes em um √∫nico bloco.

3. Estrutura b√°sica de um bloco PL/SQL
plsql
Copy
Edit
DECLARE
  -- declara vari√°veis (opcional)
  v_nome VARCHAR2(50);
BEGIN
  -- c√≥digo SQL e comandos PL/SQL aqui
  SELECT nome INTO v_nome FROM clientes WHERE id = 1;
  DBMS_OUTPUT.PUT_LINE('Nome do cliente: ' || v_nome);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('Cliente n√£o encontrado.');
END;
DECLARE: onde declara vari√°veis e constantes.

BEGIN: onde o c√≥digo execut√°vel fica.

EXCEPTION: tratamento de erros.

END: fim do bloco.

4. Exemplos pr√°ticos para o dia a dia
a) Exibir mensagem simples:

plsql
Copy
Edit
BEGIN
  DBMS_OUTPUT.PUT_LINE('Ol√°, PL/SQL!');
END;
b) Buscar um dado e mostrar com tratamento de erro:

plsql
Copy
Edit
DECLARE
  v_email VARCHAR2(100);
BEGIN
  SELECT email INTO v_email FROM clientes WHERE id = 5;
  DBMS_OUTPUT.PUT_LINE('Email: ' || v_email);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('Cliente n√£o encontrado.');
END;
5. Dicas r√°pidas:
Use DBMS_OUTPUT.PUT_LINE para imprimir mensagens no console (√∫til para debug).

Sempre trate exce√ß√µes para evitar erros que parem a execu√ß√£o.

Comece com blocos simples para entender a l√≥gica antes de criar procedimentos complexos.

Resumo para v√≠deo:
Explique o que √© PL/SQL e sua utilidade no dia a dia.

Mostre a estrutura b√°sica do bloco PL/SQL.

Demonstre exemplos simples que fa√ßam sentido para qualquer pessoa (exibir mensagem, buscar dado com tratamento de erro).

Enfatize que PL/SQL traz poder e controle para al√©m do SQL puro.