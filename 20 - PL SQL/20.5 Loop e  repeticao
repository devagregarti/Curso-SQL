üéØ T√≥pico: Loop e Repeti√ß√£o em PL/SQL
1. O que s√£o loops?
S√£o estruturas que repetem um bloco de c√≥digo v√°rias vezes automaticamente.

Muito √∫til para automatizar tarefas repetitivas no banco de dados.

2. Tipos principais de loops em PL/SQL:
Tipo de Loop	Uso principal
LOOP	Loop infinito, at√© usar EXIT para sair
WHILE LOOP	Repete enquanto a condi√ß√£o for verdadeira
FOR LOOP	Repete um n√∫mero fixo de vezes

3. Exemplo pr√°tico: LOOP com EXIT
plsql
Copy
Edit
DECLARE
  contador NUMBER := 1;
BEGIN
  LOOP
    DBMS_OUTPUT.PUT_LINE('Contador: ' || contador);
    contador := contador + 1;
    IF contador > 5 THEN
      EXIT;  -- Sai do loop quando contador for maior que 5
    END IF;
  END LOOP;
END;
4. Exemplo pr√°tico: WHILE LOOP
plsql
Copy
Edit
DECLARE
  contador NUMBER := 1;
BEGIN
  WHILE contador <= 5 LOOP
    DBMS_OUTPUT.PUT_LINE('Contador: ' || contador);
    contador := contador + 1;
  END LOOP;
END;
5. Exemplo pr√°tico: FOR LOOP (mais comum e simples)
plsql
Copy
Edit
BEGIN
  FOR i IN 1..5 LOOP
    DBMS_OUTPUT.PUT_LINE('N√∫mero: ' || i);
  END LOOP;
END;
6. Dicas r√°pidas:
Use FOR LOOP para repeti√ß√µes com n√∫mero conhecido de vezes.

Use WHILE LOOP quando a repeti√ß√£o depende de uma condi√ß√£o.

Use LOOP com EXIT para maior controle, cuidado para n√£o criar loops infinitos.

Sempre garanta que o loop tenha uma condi√ß√£o de sa√≠da!

Resumo para v√≠deo:
Explique o conceito de loops.

Demonstre os 3 tipos com exemplos simples (contagem at√© 5).

Mostre a import√¢ncia do comando EXIT para evitar loops infinitos.

Destaque situa√ß√µes pr√°ticas no dia a dia (ex: processar v√°rios registros).