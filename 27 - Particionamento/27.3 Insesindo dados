‚úÖ Relembrando: o que √© uma tabela particionada?
√â uma tabela que foi dividida em partes menores chamadas parti√ß√µes.

Cada parti√ß√£o armazena dados com base em uma regra (como data, regi√£o, etc).

O PostgreSQL cuida de enviar cada dado para a parti√ß√£o correta automaticamente.

üìå Como funciona a inser√ß√£o de dados em tabelas particionadas?
Voc√™ insere os dados na tabela principal, normalmente.

O PostgreSQL detecta em qual parti√ß√£o o dado deve ir, de acordo com as regras que voc√™ criou.

üß± Exemplo pr√°tico
1. Criando a tabela principal (por faixa de datas)
sql
Copy
Edit
CREATE TABLE pedidos (
  id SERIAL PRIMARY KEY,
  data_pedido DATE NOT NULL,
  cliente TEXT NOT NULL
) PARTITION BY RANGE (data_pedido);
2. Criando as parti√ß√µes
sql
Copy
Edit
CREATE TABLE pedidos_2023 PARTITION OF pedidos
FOR VALUES FROM ('2023-01-01') TO ('2024-01-01');

CREATE TABLE pedidos_2024 PARTITION OF pedidos
FOR VALUES FROM ('2024-01-01') TO ('2025-01-01');
‚úçÔ∏è Inserindo dados
Agora vamos inserir dois pedidos. Um feito em 2023 e outro em 2024:

sql
Copy
Edit
INSERT INTO pedidos (data_pedido, cliente) VALUES
('2023-08-10', 'Carlos'),
('2024-02-15', 'Ana');
O PostgreSQL analisa a data e envia cada linha para a parti√ß√£o correta.

üîç Como verificar para onde o dado foi?
Podemos consultar diretamente cada parti√ß√£o para ver onde o dado foi parar:

sql
Copy
Edit
SELECT * FROM pedidos_2023;
-- Vai mostrar apenas o pedido do Carlos

SELECT * FROM pedidos_2024;
-- Vai mostrar apenas o pedido da Ana
‚ö†Ô∏è Aten√ß√£o: e se o dado n√£o se encaixar em nenhuma parti√ß√£o?
Se voc√™ tentar inserir uma data que n√£o esteja coberta por nenhuma parti√ß√£o, o PostgreSQL vai dar erro.

Exemplo:

sql
Copy
Edit
INSERT INTO pedidos (data_pedido, cliente)
VALUES ('2025-03-01', 'Joana');
üí• Erro: porque n√£o existe uma parti√ß√£o para 2025.

‚úÖ Solu√ß√£o: criar uma parti√ß√£o default
Para evitar erros quando um dado "n√£o se encaixa", voc√™ pode criar uma parti√ß√£o padr√£o:

sql
Copy
Edit
CREATE TABLE pedidos_outras_datas PARTITION OF pedidos DEFAULT;
Agora, se a data n√£o pertencer a nenhuma faixa, ela ser√° inserida na parti√ß√£o default.

üõ†Ô∏è Dicas pr√°ticas
Crie parti√ß√µes suficientes para os dados que voc√™ espera receber.

Use parti√ß√µes por ano, m√™s, ou outro crit√©rio l√≥gico.

Use a parti√ß√£o default para evitar falhas inesperadas.

Sempre teste com alguns INSERTs antes de usar em produ√ß√£o.

ü§î Posso inserir diretamente numa parti√ß√£o?
Sim, mas n√£o √© o mais comum. Exemplo:

sql
Copy
Edit
INSERT INTO pedidos_2023 (data_pedido, cliente)
VALUES ('2023-12-01', 'Bruna');
‚ö†Ô∏è Cuidado: se a data n√£o estiver dentro do intervalo da parti√ß√£o, vai dar erro.

üîö Conclus√£o
Inserir dados em tabelas particionadas √© quase igual a uma tabela normal.

O PostgreSQL cuida da distribui√ß√£o dos dados, desde que as parti√ß√µes estejam bem definidas.

Parti√ß√µes ajudam a organizar melhor seus dados e a melhorar a performance do banco.

