Aula: Criando uma Tabela Particionada no PostgreSQL
‚úÖ O que √© uma tabela particionada?
√â uma tabela ‚Äúnormal‚Äù que √© dividida automaticamente em partes menores chamadas de parti√ß√µes.

Essas partes armazenam os dados de acordo com alguma regra que voc√™ define (ex: por ano, por estado, por categoria...).

O usu√°rio n√£o precisa saber onde est√° o dado ‚Äì ele consulta normalmente, e o PostgreSQL cuida do resto.

üõ†Ô∏è Passo a passo: como criar uma tabela particionada
1. Criar a tabela principal (a tabela m√£e)
Essa tabela vai ser a base para todas as parti√ß√µes.

Exemplo: queremos guardar pedidos de clientes, separados por ano.

sql
Copy
Edit
CREATE TABLE pedidos (
  id SERIAL PRIMARY KEY,
  data_pedido DATE NOT NULL,
  cliente TEXT NOT NULL
) PARTITION BY RANGE (data_pedido);
Explicando o comando:

id: identificador √∫nico do pedido.

data_pedido: ser√° usada para definir em qual parti√ß√£o o dado vai ficar.

PARTITION BY RANGE (data_pedido): estamos dizendo que as parti√ß√µes v√£o ser baseadas em faixas de datas.

2. Criar as parti√ß√µes (as tabelas filhas)
Agora vamos criar as parti√ß√µes da tabela, ou seja, as partes que v√£o armazenar os dados de verdade.

sql
Copy
Edit
CREATE TABLE pedidos_2023 PARTITION OF pedidos
FOR VALUES FROM ('2023-01-01') TO ('2024-01-01');

CREATE TABLE pedidos_2024 PARTITION OF pedidos
FOR VALUES FROM ('2024-01-01') TO ('2025-01-01');
Explicando:

pedidos_2023 vai guardar apenas os pedidos feitos em 2023.

pedidos_2024 vai guardar os pedidos de 2024.

Voc√™ pode criar uma parti√ß√£o para cada ano, m√™s, regi√£o ou outro crit√©rio, dependendo da sua necessidade.

üîç Exemplo de inser√ß√£o de dados
Vamos inserir dois pedidos em anos diferentes:

sql
Copy
Edit
INSERT INTO pedidos (data_pedido, cliente) VALUES
('2023-05-10', 'Jo√£o'),
('2024-03-22', 'Maria');
O PostgreSQL entende em qual parti√ß√£o colocar cada linha com base na data.

üß™ Verificando as parti√ß√µes
Voc√™ pode verificar se os dados foram colocados corretamente:

sql
Copy
Edit
SELECT * FROM pedidos_2023;
-- Deve mostrar apenas o pedido do Jo√£o

SELECT * FROM pedidos_2024;
-- Deve mostrar apenas o pedido da Maria
üìå Regras importantes ao criar parti√ß√µes
As faixas n√£o podem se sobrepor (ex: duas parti√ß√µes com o mesmo intervalo).

Todos os dados precisam se encaixar em uma parti√ß√£o ‚Äî sen√£o, vai dar erro ao inserir.

√â comum criar uma parti√ß√£o especial chamada ‚Äúdefault‚Äù para casos que n√£o se encaixam em nenhuma regra. Exemplo:

sql
Copy
Edit
CREATE TABLE pedidos_outras_datas PARTITION OF pedidos DEFAULT;
üßº Dica pr√°tica
Antes de criar parti√ß√µes, pense:

Como meus dados v√£o crescer?

Qual o crit√©rio mais l√≥gico para separar? (por data? por regi√£o?)

Quantas parti√ß√µes v√£o existir agora? E no futuro?

üîö Conclus√£o
Criar uma tabela particionada no PostgreSQL n√£o √© dif√≠cil.

√â s√≥ criar a tabela principal com PARTITION BY, depois criar as parti√ß√µes com as regras de separa√ß√£o.

Isso ajuda muito a performance e a organiza√ß√£o do banco de dados, especialmente com tabelas grandes.

