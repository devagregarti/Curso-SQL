üß™ Diagn√≥stico de Problemas com Concorr√™ncia em SQL (PostgreSQL)
üß† Por que diagnosticar problemas de concorr√™ncia?
Concorr√™ncia mal gerenciada pode causar:

Transa√ß√µes travadas (usu√°rios esperando indefinidamente)

Deadlocks (duas transa√ß√µes presas uma esperando a outra)

Tempo de resposta alto

Perda de performance

Saber identificar e resolver esses problemas √© essencial para qualquer DBA, dev backend ou engenheiro de dados.

üîç Sintomas comuns
Sintoma	Poss√≠vel causa
Consultas que "nunca terminam"	Locks n√£o liberados (transa√ß√£o aberta demais)
Transa√ß√µes canceladas	Deadlocks
Escritas lentas	Muitos locks simult√¢neos
Leitura "inconsistente"	Baixo n√≠vel de isolamento

üß∞ Ferramentas e Comandos para Diagn√≥stico
1. pg_stat_activity ‚Äì v√™ o que est√° rodando
sql
Copy
Edit
SELECT pid, state, query, wait_event_type, wait_event, backend_start
FROM pg_stat_activity
WHERE state != 'idle';
Coluna	O que mostra
state	running, idle, waiting
wait_event	lock, IO, etc.
query	A query que est√° sendo executada
backend_start	Quando come√ßou (bom para pegar transa√ß√µes longas)

2. pg_locks ‚Äì v√™ os bloqueios
Use com pg_stat_activity:

sql
Copy
Edit
SELECT
    a.pid,
    a.query,
    l.locktype,
    l.mode,
    l.granted,
    c.relname AS tabela
FROM pg_locks l
JOIN pg_stat_activity a ON l.pid = a.pid
LEFT JOIN pg_class c ON l.relation = c.oid
WHERE a.state != 'idle';
granted = false: est√° esperando o lock (provavelmente travado)

3. Ver quem est√° bloqueando quem
sql
Copy
Edit
SELECT 
    blocked_locks.pid     AS blocked_pid,
    blocking_locks.pid    AS blocking_pid,
    blocked_activity.query AS blocked_query,
    blocking_activity.query AS blocking_query
FROM pg_locks blocked_locks
JOIN pg_locks blocking_locks 
    ON blocked_locks.locktype = blocking_locks.locktype
    AND blocked_locks.database IS NOT DISTINCT FROM blocking_locks.database
    AND blocked_locks.relation IS NOT DISTINCT FROM blocking_locks.relation
    AND blocked_locks.page IS NOT DISTINCT FROM blocking_locks.page
    AND blocked_locks.tuple IS NOT DISTINCT FROM blocking_locks.tuple
    AND blocked_locks.pid != blocking_locks.pid
    AND NOT blocked_locks.granted AND blocking_locks.granted
JOIN pg_stat_activity blocked_activity ON blocked_activity.pid = blocked_locks.pid
JOIN pg_stat_activity blocking_activity ON blocking_activity.pid = blocking_locks.pid;
Essa consulta mostra:

Quem est√° bloqueado

Quem est√° causando o bloqueio

O que cada um est√° tentando executar

4. Deadlocks
Um deadlock √© automaticamente detectado e abortado pelo PostgreSQL.

Mas para identificar a frequ√™ncia e detalhes:

bash
Copy
Edit
# No terminal do servidor:
cat /var/log/postgresql/postgresql-*.log | grep deadlock
Ou ative log_lock_waits = on e deadlock_timeout no postgresql.conf para logar automaticamente.

üîÅ Exemplo de diagn√≥stico na pr√°tica
Cen√°rio:
Dois caixas de supermercado (usu√°rios) acessando o mesmo estoque.

sql
Copy
Edit
-- Transa√ß√£o A
BEGIN;
UPDATE produtos SET estoque = estoque - 1 WHERE id = 1;

-- Transa√ß√£o B (ao mesmo tempo)
BEGIN;
UPDATE produtos SET estoque = estoque + 5 WHERE id = 1;
Se Transa√ß√£o A n√£o finalizar (COMMIT ou ROLLBACK), a B ficar√° travada.

Use os comandos acima para descobrir:

Quem est√° bloqueando

Quem est√° travado

O que eles est√£o fazendo

üõ†Ô∏è Estrat√©gias para resolver e evitar problemas
Estrat√©gia	O que faz
Feche transa√ß√µes rapidamente	Nunca deixe um BEGIN sem COMMIT ou ROLLBACK
Use SELECT ... FOR UPDATE SKIP LOCKED	Ignora registros j√° bloqueados, ideal para filas
Defina deadlock_timeout	O PostgreSQL aborta deadlocks ap√≥s um tempo
Acesse dados na mesma ordem	Ajuda a evitar deadlocks
Use √≠ndices corretamente	Ajuda a evitar locks desnecess√°rios
Monitore com scripts ou ferramentas	Pode usar ferramentas como pgAdmin, pg_stat_monitor

üìå Slide Resumo
Diagn√≥stico de Concorr√™ncia no PostgreSQL

Ferramenta / Comando	Para qu√™ serve
pg_stat_activity	Ver transa√ß√µes ativas e se est√£o esperando
pg_locks	Ver bloqueios ativos
Consulta ‚Äúquem bloqueia quem‚Äù	Descobrir quem est√° travando quem
pg_terminate_backend(pid)	Encerrar processo que est√° travando tudo
Logs de deadlock	Ver se o banco est√° enfrentando deadlocks

üß† Dica para analogia na aula
"Imagine um estacionamento com uma entrada e sa√≠da √∫nicas. Se dois carros entrarem ao mesmo tempo e cada um tentar dar a r√© para sair pela mesma vaga, eles ficam presos ‚Äî um esperando o outro. No banco, isso √© um deadlock. Se voc√™ n√£o tem um guardinha (diagn√≥stico), ningu√©m sai do lugar."

