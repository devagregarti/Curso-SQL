 T√≥pico: Comandos √∫teis para lidar com concorr√™ncia em SQL
‚úÖ O que √© concorr√™ncia?
Concorr√™ncia acontece quando dois ou mais usu√°rios tentam acessar ou modificar os mesmos dados ao mesmo tempo. Para evitar problemas, os SGBDs usam controle de concorr√™ncia.

üß± Conceitos-chave
1. Transa√ß√µes (BEGIN, COMMIT, ROLLBACK)
Uma transa√ß√£o agrupa v√°rias opera√ß√µes SQL que devem ser executadas como uma unidade. Ou seja, ou tudo d√° certo (COMMIT), ou nada √© salvo (ROLLBACK).

sql
Copy
Edit
BEGIN;

UPDATE contas SET saldo = saldo - 100 WHERE id = 1;
UPDATE contas SET saldo = saldo + 100 WHERE id = 2;

COMMIT;
Se houver um erro no meio, usamos:

sql
Copy
Edit
ROLLBACK;
2. N√≠veis de Isolamento
Controlam como as transa√ß√µes veem as mudan√ßas feitas por outras transa√ß√µes. Os n√≠veis s√£o:

READ UNCOMMITTED (n√£o seguro ‚Äì pode ler dados sujos)

READ COMMITTED (padr√£o no PostgreSQL ‚Äì l√™ apenas dados confirmados)

REPEATABLE READ (a leitura dentro da transa√ß√£o sempre ver√° os mesmos dados)

SERIALIZABLE (m√°xima seguran√ßa ‚Äì executa como se fosse uma por vez)

Exemplo:

sql
Copy
Edit
SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;
BEGIN;
-- suas consultas aqui
COMMIT;
3. Bloqueios (LOCK)
Se quiser garantir que ningu√©m mais modifique uma linha ou tabela enquanto voc√™ trabalha nela:

sql
Copy
Edit
LOCK TABLE clientes IN EXCLUSIVE MODE;
Ou:

sql
Copy
Edit
SELECT * FROM clientes WHERE id = 5 FOR UPDATE;
Esse √∫ltimo bloqueia a linha at√© a transa√ß√£o ser finalizada.

4. Deadlocks
Ocorrem quando duas transa√ß√µes esperam uma pela outra para continuar. Exemplo:

Transa√ß√£o A bloqueia a linha 1 e quer acessar a linha 2

Transa√ß√£o B bloqueia a linha 2 e quer acessar a linha 1
‚Üí Nenhuma consegue continuar. O banco detecta isso e cancela uma delas.

üí° Dica para evitar: sempre acesse os dados na mesma ordem em todas as transa√ß√µes.

5. NOWAIT e SKIP LOCKED
Permitem que a transa√ß√£o n√£o fique esperando se os dados estiverem bloqueados.

sql
Copy
Edit
-- D√° erro se a linha j√° estiver bloqueada
SELECT * FROM pedidos WHERE status = 'PENDENTE' FOR UPDATE NOWAIT;

-- Ignora as linhas bloqueadas
SELECT * FROM pedidos WHERE status = 'PENDENTE' FOR UPDATE SKIP LOCKED;
√ötil para sistemas de fila/processamento paralelo.

üìå Resumo para o slide
Comando / Conceito	O que faz
BEGIN / COMMIT / ROLLBACK	Inicia, confirma ou desfaz uma transa√ß√£o
SET TRANSACTION ISOLATION LEVEL	Define o n√≠vel de isolamento
LOCK TABLE / FOR UPDATE	Bloqueia tabela ou linha para evitar conflitos
NOWAIT / SKIP LOCKED	Controla o comportamento ao tentar acessar dados bloqueados
Deadlock	Quando duas transa√ß√µes se travam mutuamente (evitar com boas pr√°ticas)