üèÅ Introdu√ß√£o √† Performance em Bancos de Dados (PostgreSQL)
üìå O que √© performance em banco de dados?
Performance √© o desempenho do banco de dados: o qu√£o r√°pido ele consegue responder √†s perguntas (consultas).

Um banco de dados com boa performance responde r√°pido e sem travar, mesmo com muitos dados.

ü§î Por que se preocupar com performance?
Consultas lentas deixam o sistema devagar.

Isso pode afetar sites, aplicativos e empresas inteiras.

Otimizar a performance evita gastos com servidores caros.

Ajuda a melhorar a experi√™ncia do usu√°rio final.

‚ö†Ô∏è Exemplos de problemas comuns de performance
Consultas que demoram muito.

Muitos usu√°rios acessando ao mesmo tempo.

Falta de √≠ndice (vamos ver o que √© isso mais adiante).

Tabelas com milh√µes de linhas sendo consultadas sem filtros.

M√° escrita de consultas SQL (ex: SELECT * em tudo).

üîç Fatores que afetam a performance
1. Tamanho da tabela
Quanto mais dados, mais tempo pode levar.

Uma consulta em uma tabela com 10 linhas √© r√°pida.

Em uma com 10 milh√µes de linhas, precisa de cuidados especiais.

2. Filtros e condi√ß√µes
Consultas sem WHERE trazem tudo da tabela, mesmo que n√£o seja necess√°rio.

Exemplo:

sql
Copy
Edit
SELECT * FROM clientes; -- ruim em tabelas grandes
SELECT * FROM clientes WHERE cidade = 'Dublin'; -- melhor
3. Uso de √≠ndices
√çndices s√£o como atalhos para encontrar dados mais r√°pido.

Sem √≠ndice, o banco l√™ linha por linha at√© achar o que precisa.

Com √≠ndice, ele j√° sabe onde ir direto.

Exemplo:

sql
Copy
Edit
CREATE INDEX idx_cidade ON clientes(cidade);
4. Quantidade de colunas
SELECT * pega todas as colunas, mesmo que voc√™ s√≥ precise de uma.

Isso pode ser lento e gastar mem√≥ria.

Melhor:

sql
Copy
Edit
SELECT nome, cidade FROM clientes;
5. Quantidade de dados retornados
Limitar a quantidade de resultados ajuda.

Exemplo:

sql
Copy
Edit
SELECT * FROM clientes LIMIT 10;
üõ†Ô∏è Boas pr√°ticas iniciais para melhorar performance
Sempre use filtros (WHERE) quando poss√≠vel.

Evite usar SELECT * sem necessidade.

Crie √≠ndices nas colunas mais usadas em buscas e filtros.

Use LIMIT quando estiver testando consultas.

Mantenha os dados organizados e limpos.

‚úÖ Resumo
Performance √© a velocidade com que o banco de dados responde.

Pequenas mudan√ßas em como voc√™ escreve a consulta podem fazer grande diferen√ßa.

Aprender a pensar em performance desde o in√≠cio evita dores de cabe√ßa no futuro.

Em breve veremos como analisar consultas e criar √≠ndices na pr√°tica.